{"version":3,"sources":["components/layout/spinner.gif","actions/types.js","actions/alert.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/layout/About.js","components/auth/Register.js","components/auth/Login.js","components/layout/Spinner.js","components/dashboard/DashboardActions.js","actions/profile.js","actions/post.js","components/posts/PostItem.js","components/dashboard/Dashboard.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/Profile.js","components/users/UserItem.js","actions/user.js","components/TopDiscussion.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/SubCommentItem.js","components/post/SubCommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/posts/PostForm.js","components/routing/PrivateRoute.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/user.js","reducers/index.js","store.js","components/layout/Alert.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","POST_ERROR","setAlert","msg","alertType","timeout","arguments","length","undefined","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","localStorage","get","sent","data","t0","stop","_x","apply","this","connect","state","auth","logout","_ref$auth","isAuthenticated","loading","authLinks","react_default","createElement","react_router_dom","to","className","onClick","href","guestLinks","src","alt","react","react_router","About","register","_ref2","name","email","password","_ref3","_callee2","config","body","errors","_context2","Content-Type","JSON","stringify","post","response","forEach","error","_x2","_useState","useState","password2","_useState2","slicedToArray","formData","setFormData","onChange","e","objectSpread","defineProperty","target","value","onSubmit","preventDefault","placeholder","requried","minLength","class","login","_ref4","_callee3","_context3","_x3","Spinner","spinner","style","width","margin","display","DashboardActions","getCurrentProfile","statusText","status","createProfile","history","edit","_callee4","_context4","push","_x4","getPosts","console","log","toggleCommentLike","comment_id","_ref5","_callee5","_context5","put","concat","_x5","deletePost","_ref8","_callee8","_context8","window","confirm","delete","_x8","toggleLike","likes","toggleStatus","_ref14","_callee14","_context14","_x14","xxx","_ref$post","_id","title","avatar","user","comments","date","dist_default","format","filter","arrayItem","profile","deleteAccount","posts","_ref$profile","useEffect","dashboard_DashboardActions","map","mypost","posts_PostItem","key","withRouter","website","location","skills","bio","youtube","twitter","facebook","instagram","linkedin","_useState3","_useState4","displaySocialInputs","toggleSocialInputs","ProfileItem","_ref$profile$user","getProfiles","profiles","profiles_ProfileItem","ProfileTop","social","rel","ProfileAbout","firstName","trim","split","skill","index","getProfileById","userId","match","params","profile_ProfileTop","profile_ProfileAbout","getUsers","_ref$user","users","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","shuffleWords","slice","TopDiscussion","sort","b","users_UserItem","components_TopDiscussion","addComment","postId","_ref10","_callee10","_context10","_x10","text","setText","rows","tx","document","getElementsByTagName","i","setAttribute","scrollHeight","setArea","required","deleteSubComment","commentId","subcommentId","_ref13","_callee13","_context13","_x13","_ref$subcomment","subcomment","commentid","addSubComment","_ref11","_callee11","_context11","_x11","setSubcomment","onKeyDown","deleteComment","_ref12","_callee12","_context12","_x12","_ref$comment","comment","subComments","displayForm","toggleDisplayForm","post_SubCommentForm","post_SubCommentItem","alert","getPost","message","toggleLikePostPage","post_CommentForm","post_CommentItem","addPost","_ref9","_callee9","_context9","_x9","Component","component","rest","objectWithoutProperties","assign","render","props","initialState","getItem","combineReducers","action","toConsumableArray","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","alerts","App","es","layout_Navbar","layout_Alert","exact","path","Landing","Register","Login","Profiles","Profile","Posts","Post","PostForm","routing_PrivateRoute","Dashboard","CreateProfile","EditProfile","ReactDOM","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.7128225a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.377ea55d.gif\";","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\nexport const LOGOUT = 'LOGOUT';\n\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\n\n// clear profile when logout so the next user(same computer) can not access\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\n\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\n\nexport const GET_POSTS = 'GET_POSTS';\nexport const GET_POST = 'GET_POST';\nexport const POST_ERROR = 'POST_ERROR';\n\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\nexport const UPDATE_LIKE = 'UPDATE_LIKE';\n\nexport const UPDATE_COMMENT_LIKES = 'UPDATE_COMMENT_LIKES';\nexport const DELETE_POST = 'DELETE_POST';\n\nexport const UPDATE_STATUS = 'UPDATE_STATUS';\n\nexport const ADD_POST = 'ADD_POST';\n\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\n\nexport const ADD_SUB_COMMENT = 'ADD_SUB_COMMENT';\nexport const REMOVE_SUB_COMMENT = 'REMOVE_SUB_COMMENT';\n\nexport const GET_USERS = 'GET_USERS';\n","import { SET_ALERT, REMOVE_ALERT } from './types';\nimport uuid from 'uuid';\n\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n  const id = uuid.v4();\n  dispatch({\n    type: SET_ALERT,\n    payload: { msg, alertType, id }\n  });\n\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n};\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\n// Load User\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n// Register User\n\nexport const register = ({ name, email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n\n// Login User\n\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n//LOGOUT / clear everything\n\nexport const logout = () => dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n};\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n  const authLinks = (\n    <ul>\n      <li>\n        <Link to='/post-form'>+</Link>\n      </li>\n\n      <li>\n        <Link to='/dashboard'>\n          <i className='fas fa-user' />{' '}\n          <span className='hide-sm'>My Dashboard</span>\n        </Link>\n      </li>\n\n      <li>\n        <a onClick={logout} href='/'>\n          <i className='fas fa-sign-out-alt' />\n          {'  '}\n          <span className='hide-sm'>Log out</span>\n        </a>\n      </li>\n    </ul>\n  );\n\n  const guestLinks = (\n    <ul>\n      <li>\n        <Link to='/login'>+</Link>\n      </li>\n\n      <Link to='/register'>\n        <li>Sign up</li>\n      </Link>\n      <Link to='/login'>\n        <li>Log in</li>\n      </Link>\n    </ul>\n  );\n  return (\n    <nav className='navbar bg-white'>\n      <div className='left-nav'>\n        <h1>\n          <Link to='/'>\n            <img src='/images/logo.svg' alt='logo' />\n            <h1>IDEATOSHARE</h1>\n          </Link>\n        </h1>\n\n        <Link to='/about'>About</Link>\n      </div>\n\n      {!loading && (\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\n      )}\n    </nav>\n  );\n};\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Navbar);\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst Landing = ({ isAuthenticated }) => {\n  if (isAuthenticated) {\n    return <Redirect to='/' />;\n  }\n  return (\n    <div className='landing'>\n      <div className='dark-overlay'>\n        <div className='landing-inner'>\n          <p>Welcome to IdeaToShare</p>\n          <p className='lead'>Share your ideas and problem with the world</p>\n          <div className='buttons'>\n            <Link to='/register' className='btn btn-action'>\n              Sign up\n            </Link>\n            <Link to='/login' className='btn'>\n              Log in\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nLanding.propTypes = {\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\nexport default connect(mapStateToProps)(Landing);\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div className='about-section'>\n      <div className='container'>\n        <div className='header'>\n          <div className='left'>\n            <h1>what is IdeaToShare</h1>\n            <p>\n              IdeaToshare is a community of changemakers, creators, developers\n              or anyone where individuals can share their thoughts about the\n              world. Whether it’s a problem or anything you want to see in our\n              world. Share, discuss, create !!!\n            </p>\n          </div>\n          <div className='right'>\n            <img src='images/community.svg' alt='community' />\n          </div>\n        </div>\n\n        <div className='how-to'>\n          <h2>How does it work</h2>\n          <div className='row1'>\n            <div className='post-your-thought'>\n              <img src='images/post.svg' alt='post' />\n              <h3>Post your thoughts</h3>\n              <p>\n                Casually share your thoughts about problem or ideas things in\n                your daily life.\n              </p>\n            </div>\n\n            <div className='discuss'>\n              <img src='images/discuss.svg' alt='discuss' />\n              <h3>Discuss with others</h3>\n              <p>\n                Discuss with others in the community and see whether you can\n                tackle these problem or make these ideas come tre. Maybe someone\n                already solved your problem, maybe it is the novel idea?\n              </p>\n            </div>\n\n            <div className='help'>\n              <img src='images/help.svg' alt='help' />\n              <h3>Ask for help</h3>\n              <p>\n                If you cannot achieve these alone, maybe you can ask others who\n                sympathize to what you are doing.v\n              </p>\n            </div>\n          </div>\n\n          <div className='row2'>\n            <div className='update'>\n              <img src='images/update.svg' alt='update' />\n              <h3>Update the status</h3>\n              <p>\n                Update the status of your thoughts Are you taklig it? Is it\n                already solved by somehow? Are anyone working on thse problem\n              </p>\n            </div>\n\n            <div className='facebook'>\n              <img src='images/facebook.svg' alt='facebook' />\n              <h3>Join facebook group</h3>\n              <p>\n                Connect with others more closely and be part of the community.\n              </p>\n            </div>\n\n            <div className='tackle'>\n              <img src='/images/tackle.svg' alt='tackle' />\n              <h3>Make it happen</h3>\n              <p>\n                Try to solve the problem of make your ideas come true !\n                Challenge yourself. Let see what you can do to chagne the world.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({ name, email, password });\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/' />;\n  }\n  return (\n    <Fragment>\n      <div className='register-form'>\n        <h1 className='large bold'>Create your account</h1>\n\n        <form className='form' onSubmit={e => onSubmit(e)}>\n          <div className='form-group'>\n            <p>Name</p>\n            <input\n              name='name'\n              type='text'\n              placeholder='Name'\n              requried\n              value={name}\n              onChange={e => onChange(e)}\n            />\n          </div>\n\n          <div className='form-group'>\n            <p>E-mail</p>\n            <input\n              name='email'\n              type='email'\n              placeholder='E-mail'\n              value={email}\n              onChange={e => onChange(e)}\n            />\n          </div>\n\n          <div className='form-group'>\n            <p>Password</p>\n            <input\n              name='password'\n              type='password'\n              placeholder='Password'\n              minLength='6'\n              value={password}\n              onChange={e => onChange(e)}\n            />\n          </div>\n\n          <div className='form-group'>\n            <p class='confirm'>Confirm password</p>\n            <input\n              name='password2'\n              type='password'\n              placeholder='Confirm Password'\n              minLength='6'\n              value={password2}\n              onChange={e => onChange(e)}\n            />\n          </div>\n          <input\n            type='submit'\n            value='Create account'\n            className='btn btn-action'\n          />\n        </form>\n\n        <p>\n          Already have an account? <Link to='/login'>Sign in</Link>\n        </p>\n\n        <p className='small'>\n          By signing up, you agree to the <Link>Terms of Service</Link> and{' '}\n          <Link>Privacy Policy</Link>\n        </p>\n      </div>\n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(\n  mapStateToProps,\n  { setAlert, register }\n)(Register);\n","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  // Redirect if logged in\n\n  if (isAuthenticated) {\n    return <Redirect to='/' />;\n  }\n  return (\n    <Fragment>\n      <div className='register-form'>\n        {/* <div className='close'>+</div> */}\n        <h1 className='large bold'>Sign in to your account</h1>\n        <form className='form' onSubmit={e => onSubmit(e)}>\n          <div className='form-group'>\n            <p>E-mail</p>\n            <input\n              name='email'\n              type='email'\n              placeholder='E-mail'\n              value={email}\n              onChange={e => onChange(e)}\n            />\n          </div>\n\n          <div className='form-group'>\n            <p>Password</p>\n            <input\n              name='password'\n              type='password'\n              placeholder='Password'\n              minLength='6'\n              value={password}\n              onChange={e => onChange(e)}\n            />\n          </div>\n          <input type='submit' value='Sign in' className='btn btn-action' />\n        </form>\n\n        <p>\n          Don't have an account? <Link to='/register'>Sign up</Link>\n        </p>\n      </div>\n    </Fragment>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import React from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n  <div className='container-xy'>\n    <div className='center-xy'>\n      <img\n        src={spinner}\n        style={{ width: '200px', margin: 'auto', display: 'block' }}\n        alt='Landing...'\n      />\n      <h1>loading...</h1>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst DashboardActions = () => {\n  return (\n    <div className='dash-buttons'>\n      <Link to='/edit-profile' className='btn btn-light'>\n        <i class='fas fa-edit'></i> Edit\n      </Link>\n    </div>\n  );\n};\n\nexport default DashboardActions;\n","import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  GET_PROFILES,\n  CLEAR_PROFILE,\n  ACCOUNT_DELETED\n} from './types';\n\n// Get current users profile\nexport const getCurrentProfile = () => async dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n  try {\n    const res = await axios.get('/api/profile/me');\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Get all profiles\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Get profile by ID (other users)\n\nexport const getProfileById = userId => async dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log('inside catch');\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Create or update profile\nexport const createProfile = (\n  formData,\n  history,\n  edit = false\n) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    const res = await axios.post('/api/profile', formData, config);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    // if (!edit) {\n    history.push('/dashboard');\n    // }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete account $ profile, know the account from the token\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This cannot be undone.')) {\n    try {\n      await axios.delete('/api/profile');\n      dispatch({ type: CLEAR_PROFILE });\n      dispatch({ type: ACCOUNT_DELETED });\n\n      dispatch(\n        setAlert('Your account has been permanently deleted', 'success')\n      );\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  }\n};\n","import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n  GET_POSTS,\n  POST_ERROR,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  UPDATE_LIKES,\n  UPDATE_LIKE,\n  UPDATE_COMMENT_LIKES,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n  ADD_SUB_COMMENT,\n  REMOVE_SUB_COMMENT,\n  UPDATE_STATUS\n} from './types';\n\n//Get posts\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n    console.log('3');\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Get a single post\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.message, status: err.name }\n    });\n  }\n};\n\n// toggleLike\nexport const toggleLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/togglelike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data }\n    });\n  } catch (err) {\n    dispatch(setAlert('Please login to vote', 'danger'));\n\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// toggleLike\nexport const toggleLikePostPage = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/togglelike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch(setAlert('Please login to vote', 'danger'));\n\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// toggleLike of a comment\nexport const toggleCommentLike = (id, comment_id) => async dispatch => {\n  try {\n    const res = await axios.put(\n      `/api/posts/comment/${id}/${comment_id}/togglelike_comment`\n    );\n\n    dispatch({\n      type: UPDATE_COMMENT_LIKES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch(setAlert('Please login to like', 'danger'));\n\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Add like\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Remove like\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete post\nexport const deletePost = (id, history) => async dispatch => {\n  try {\n    const approved = window.confirm(\n      'Are you sure you want to delet this post?'\n    );\n    if (approved) {\n      await axios.delete(`/api/posts/${id}`);\n\n      dispatch({\n        type: DELETE_POST,\n        payload: id\n      });\n\n      dispatch(setAlert('Post Removed', 'success'));\n      history.push('/');\n    }\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const addPost = (formData, history) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    const res = await axios.post('/api/posts', formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Post Created', 'success'));\n    history.push(`/posts/${res.data._id}`);\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// add comment\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    const res = await axios.post(\n      `/api/posts/comment/${postId}`,\n      formData,\n      config\n    );\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// add subcomment\nexport const addSubComment = (\n  postId,\n  commentId,\n  formData\n) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    const res = await axios.post(\n      `/api/posts/comment/${postId}/${commentId}`,\n      formData,\n      config\n    );\n    dispatch({\n      type: ADD_SUB_COMMENT,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete Comment\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId\n    });\n\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const toggleLikeSubcomment = () => {};\n\n// Delete a subcomment\nexport const deleteSubComment = (\n  postId,\n  commentId,\n  subcommentId\n) => async dispatch => {\n  try {\n    const res = await axios.delete(\n      `/api/posts/comment/subcomment/${postId}/${commentId}/${subcommentId}`\n    );\n    dispatch({\n      type: REMOVE_SUB_COMMENT,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// update status of the post\nexport const toggleStatus = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/status/${id}`);\n\n    dispatch({\n      type: UPDATE_STATUS,\n      payload: { id, status: res.data }\n    });\n  } catch (err) {\n    dispatch(setAlert('You are not authorized', 'danger'));\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { toggleLike, deletePost, toggleStatus } from '../../actions/post';\nconst PostItem = ({\n  toggleLike,\n  deletePost,\n  toggleStatus,\n  auth,\n  post: { _id, title, name, avatar, user, likes, comments, date, status },\n  history\n}) => {\n  let xxx;\n  if (status === 'red') {\n    // xxx = <i className='fas fa-times red' />;\n    xxx = <p>To Tackle</p>;\n  } else if (status === 'yellow') {\n    // xxx = <i className='fas fa-spinner yellow' />;\n    xxx = <p>On Progress</p>;\n  } else if (status === 'green') {\n    // xxx = <i className='fas fa-check green' />;\n    xxx = <p>Done</p>;\n  } else {\n    xxx = <p>No Status</p>;\n  }\n  return (\n    <div className={`post-item ${status}-border`}>\n      <div className='left'>\n        <Link to={`/profile/${user}`}>\n          <img className='post-avatar' src={avatar} alt={`avatar${name}`} />\n          <p>{name}</p>\n        </Link>\n        {!auth.loading &&\n          auth.isAuthenticated &&\n          auth.user &&\n          user === auth.user._id && (\n            <button\n              onClick={e => deletePost(_id, history)}\n              type='button'\n              className='delete-post-button'\n            >\n              <i class='fas fa-trash-alt'></i>\n            </button>\n          )}\n      </div>\n      <Link to={`posts/${_id}`} className='middle'>\n        <p className='my-1 post-item-content'>{title}</p>\n        <p className='post-date small'>\n          Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n        </p>\n\n        <span className='border-btn'>\n          <Link to={`posts/${_id}`}>\n            <i className='fas fa-comments' />{' '}\n            <span className='comment-count'>\n              {comments.length > 0 ? comments.length : 0}\n            </span>\n          </Link>\n        </span>\n      </Link>\n\n      <div className='right'>\n        {auth &&\n        auth.user &&\n        likes.filter(arrayItem => arrayItem.user === auth.user._id).length >\n          0 ? (\n          <button\n            onClick={e => toggleLike(_id)}\n            type='button'\n            className='btn toggle-like primary-border'\n          >\n            <i class='fas fa-sort-up text-primary' />{' '}\n            <div className='comment-count'>\n              {likes.length > 0 ? likes.length : 0}\n            </div>\n          </button>\n        ) : (\n          <button\n            onClick={e => toggleLike(_id)}\n            type='button'\n            className='btn toggle-like'\n          >\n            <i class='fas fa-sort-up text-grey' />{' '}\n            <div className='comment-count'>\n              {likes.length > 0 ? likes.length : 0}\n            </div>\n          </button>\n        )}\n\n        <button className='status' onClick={e => toggleStatus(_id)}>\n          <p className='status1'>status</p>\n          <p className={`status2 ${status}-status`}>{xxx}</p>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  toggleLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  toggleStatus: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { toggleLike, deletePost, toggleStatus }\n)(PostItem);\n","import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport DashboardActions from './DashboardActions';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\nimport { getPosts } from '../../actions/post';\nimport PostItem from '../posts/PostItem';\nconst Dashboard = ({\n  getCurrentProfile,\n  getPosts,\n  deleteAccount,\n  auth: { user },\n  post: { posts },\n  profile: { profile, loading }\n}) => {\n  useEffect(() => {\n    getPosts();\n    getCurrentProfile();\n  }, [getCurrentProfile, getPosts]);\n\n  return loading && profile === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className='large text-primary'>Dashboard</h1>\n      <p>\n        <p>\n          <i className='fas fa-user'></i>Hello {user && user.name}, Welcome to\n          IdeaShare\n        </p>\n      </p>\n\n      {profile !== null ? (\n        <div className='profile-action'>\n          <Link to={`/profile/${user._id}`} className='btn btn-primary'>\n            My profile\n          </Link>\n          <DashboardActions />\n          <div>\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\n              <i class='fas fa-user-minus'></i>\n              Delete My Account\n            </button>\n          </div>\n        </div>\n      ) : (\n        <Fragment>\n          <p>You have not created profile yet, let's add some info.</p>\n          <div className='profile-action'>\n            <Link to='create-profile' className='btn btn-primary'>\n              Create Profile\n            </Link>\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\n              <i class='fas fa-user-minus'></i>\n              Delete My Account\n            </button>\n          </div>\n        </Fragment>\n      )}\n      <div className='my-post-section'>\n        <h2>My posts</h2>\n        {posts\n          .filter(post => post.user === user._id)\n          .map(mypost => (\n            <PostItem key={mypost._id} post={mypost} />\n          ))}\n      </div>\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  getPosts: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile,\n  post: state.post\n});\n\nexport default connect(\n  mapStateToProps,\n  { getPosts, getCurrentProfile, deleteAccount }\n)(Dashboard);\n","import React, { Fragment, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile } from '../../actions/profile';\n\nconst CreateProfile = ({ createProfile, history }) => {\n  const [formData, setFormData] = useState({\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    bio: '',\n    youtube: '',\n    twitter: '',\n    facebook: '',\n    instagram: '',\n    linkedin: ''\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  const {\n    website,\n    location,\n    status,\n    skills,\n    bio,\n    youtube,\n    twitter,\n    facebook,\n    instagram,\n    linkedin\n  } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history);\n  };\n  return (\n    <div className='edit-profile-section'>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user' /> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={e => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={e => onChange(e)}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Artist'>Artist</option>\n            <option value='Developer'>Developer</option>\n            <option value='Designer'>Designer</option>\n            <option value='Professor'>Professor</option>\n            <option value='Student'>Student</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x' />\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x' />\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x' />\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x' />\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x' />\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={e => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='m-1' to='dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </div>\n  );\n};\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { createProfile }\n)(withRouter(CreateProfile));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  getCurrentProfile,\n  createProfile,\n  history,\n  auth\n}) => {\n  const [formData, setFormData] = useState({\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    bio: '',\n    youtube: '',\n    twitter: '',\n    facebook: '',\n    instagram: '',\n    linkedin: ''\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      status: loading || !profile.status ? '' : profile.status,\n      skills: loading || !profile.skills ? '' : profile.skills,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      youtube: loading || !profile.youtube ? '' : profile.youtube,\n      twitter: loading || !profile.twitter ? '' : profile.twitter,\n      facebook: loading || !profile.facebook ? '' : profile.facebook,\n      instagram: loading || !profile.instagram ? '' : profile.instagram,\n      linkedin: loading || !profile.linkedin ? '' : profile.linkedin\n    });\n  }, [loading, getCurrentProfile]);\n\n  const {\n    website,\n    location,\n    status,\n    skills,\n    bio,\n    youtube,\n    twitter,\n    facebook,\n    instagram,\n    linkedin\n  } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  if (!auth.isAuthenticated) {\n    return <Redirect to='/login' />;\n  }\n  return (\n    <div className='edit-profile-section'>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p>\n        <i className='fas fa-user' /> Let's get some information to make your\n        profile stand out\n      </p>\n      <p>* = required field</p>\n      <form className='form' onSubmit={e => onSubmit(e)}>\n        <div className='form-group'>\n          <p className='label'>* What are you?</p>\n          <select name='status' value={status} onChange={e => onChange(e)}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Artist'>Artist</option>\n            <option value='Developer'>Developer</option>\n            <option value='Designer'>Designer</option>\n            <option value='Professor'>Professor</option>\n            <option value='Student'>Student</option>\n            <option value='Other'>Other</option>\n          </select>\n          <p className='small'>\n            Give us an idea of where you are at in your career\n          </p>\n        </div>\n\n        <div className='form-group'>\n          <p className='label'>Your website</p>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={e => onChange(e)}\n          />\n          <p className='small'>Could be your own or a company website</p>\n        </div>\n        <div className='form-group'>\n          <p className='label'>Where do you live?</p>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={e => onChange(e)}\n          />\n          <p className='small'>City & state suggested (eg. Boston, MA)</p>\n        </div>\n        <div className='form-group'>\n          <p className='label'>What are your skills you want to share?</p>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={e => onChange(e)}\n          />\n          <p className='small'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </p>\n        </div>\n        <div className='form-group'>\n          <p className='label'>Tell us a little about yourself</p>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={e => onChange(e)}\n          />\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x' />\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x' />\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x' />\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x' />\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x' />\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={e => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='m-1' to='dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </div>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { createProfile, getCurrentProfile }\n)(withRouter(EditProfile));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst ProfileItem = ({\n  profile: {\n    user: { _id, name, avatar },\n    status,\n    location,\n    skills\n  }\n}) => {\n  return (\n    <div>\n      <img src={avatar} alt={`${name}-avatar`} className='profile-avatar' />\n    </div>\n\n    // original\n    // <div className='profile'>\n    //   <img src={avatar} alt='' className='round-img' />\n    //   <div>\n    //     <h2>{name}</h2>\n    //     <p>{status}</p>\n    //     <p className='my-1'>{location && <span>{location}</span>}</p>\n    //     <Link to={`/profile/${_id}`} className='btn btn-primary'>\n    //       View Profile\n    //     </Link>\n    //   </div>\n    //   <ul>\n    //     {skills.slice(0, 4).map((skill, index) => (\n    //       <li key={index} className='text-primary'>\n    //         <i className='fas fa-check' />\n    //         {skill}\n    //       </li>\n    //     ))}\n    //   </ul>\n    // </div>\n  );\n};\n\nProfileItem.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileItem;\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from './ProfileItem';\nimport { getProfiles } from '../../actions/profile';\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n\n  return (\n    <Fragment>\n      {loading || profiles === null ? (\n        <Spinner />\n      ) : (\n        <div className='profiles-grid'>\n          {/* <h1 className='large text-primary'>Ideators</h1> */}\n          <p className='lead'>\n            <i className='fab fa-connectdevelop' /> Our Ideators\n          </p>\n          <div className='profiles'>\n            <div className='flex'>\n              {profiles.length > 0 ? (\n                profiles.map(profile => (\n                  <ProfileItem key={profile._id} profile={profile} />\n                ))\n              ) : (\n                <h4>No profiles found ...</h4>\n              )}\n            </div>\n\n            <hr />\n            <p>show more</p>\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\nexport default connect(\n  mapStateToProps,\n  { getProfiles }\n)(Profiles);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileTop = ({\n  profile: {\n    status,\n    location,\n    website,\n    social,\n    user: { name, avatar }\n  }\n}) => {\n  return (\n    <div className='profile-top'>\n      <img src={avatar} alt='profile' />\n      <h1>{name}</h1>\n      <p className='lead-status'>{status}</p>\n      <p>{location && <span>{location}</span>}</p>\n      <div class='icons my-1'>\n        {website && (\n          <a href={website} target='_blank' rel='noopener noreferrer'>\n            <i className='fas fa-globe fa-1x' />\n          </a>\n        )}\n\n        {social && social.twitter && (\n          <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-twitter' />\n          </a>\n        )}\n\n        {social && social.facebook && (\n          <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-facebook' />\n          </a>\n        )}\n\n        {social && social.linkedin && (\n          <a href={social.linkedin} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-linkedin' />\n          </a>\n        )}\n\n        {social && social.youtube && (\n          <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-youtube' />\n          </a>\n        )}\n\n        {social && social.instagram && (\n          <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-instagram fa-2x' />\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nProfileTop.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileTop;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileAbout = ({\n  profile: {\n    bio,\n    skills,\n    user: { name }\n  }\n}) => {\n  const firstName = name.trim().split(' ')[0];\n\n  return (\n    <div class='profile-about'>\n      {bio && (\n        <Fragment>\n          <h2 class='text-primary'>\n            {firstName[firstName.length - 1] === 's'\n              ? `${firstName}'`\n              : `${firstName}'s`}{' '}\n            Bio\n          </h2>\n          <p className='bio'>{bio}</p>\n        </Fragment>\n      )}\n\n      <div>\n        <h2 class='text-primary'>Skills Set</h2>\n        <div className='skills'>\n          {skills.map((skill, index) => (\n            <div key={index} class='p-1'>\n              <i class='fa fa-check' /> {skill}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nProfileAbout.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileAbout;\n","import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport { getPosts } from '../../actions/post';\nimport ProfileTop from './ProfileTop';\nimport PostItem from '../posts/PostItem';\nimport ProfileAbout from './ProfileAbout';\n\nconst Profile = ({\n  getProfileById,\n  getPosts,\n  profile: { profile, loading },\n  auth,\n  post: { posts },\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n    getPosts();\n  }, [getProfileById, getPosts, match.params.id]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          {!profile ? (\n            <Fragment>\n              <h1>Sorry, this user doesn't create a profile yet</h1>\n              <Link to='/'>\n                <i class='fas fa-chevron-left'></i>Back to Home\n              </Link>\n            </Fragment>\n          ) : (\n            <Fragment>\n              {/* <Link to='/profiles' className='btn btn-light'>\n                Back To Profiles\n              </Link> */}\n\n              {auth.isAuthenticated &&\n                auth.loading === false &&\n                auth.user._id === profile.user._id && (\n                  <Link to='/edit-profile' className='btn btn-dark'>\n                    Edit Profile\n                  </Link>\n                )}\n\n              <div className='profile-section'>\n                <ProfileTop profile={profile} />\n                <ProfileAbout profile={profile} />\n              </div>\n              <div className='look-down'>\n                <i className='fas fa-chevron-down fa-2x'></i>\n                <i className='fas fa-chevron-down fa-2x relative'></i>\n              </div>\n              <h2>Posts from {profile.user.name}</h2>\n              {posts.filter(post => post.user === profile.user._id).length >\n              0 ? (\n                <Fragment>\n                  {posts\n                    .filter(post => post.user === profile.user._id)\n                    .map(mypost => (\n                      <PostItem key={mypost._id} post={mypost} />\n                    ))}\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <h3>No post yet</h3>\n                  {/* <Link to='/post-form'>Create a post</Link> */}\n                </Fragment>\n              )}\n            </Fragment>\n          )}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth,\n  post: state.post\n});\nexport default connect(\n  mapStateToProps,\n  { getProfileById, getPosts }\n)(Profile);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport { getUsers } from '../../actions/user';\n\nconst UserItem = ({ user: { users, loading }, getUsers }) => {\n  useEffect(() => {\n    getUsers();\n  }, [getUsers]);\n\n  const shuffleWords = array => {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  };\n\n  return (\n    <Fragment>\n      {loading || users === null ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <p className='lead'>\n            <i className='fab fa-connectdevelop' /> Our Ideators Today\n          </p>\n          <div className='users'>\n            <div className='flex'>\n              {users.length > 0 ? (\n                shuffleWords(users)\n                  .slice(0, 10)\n                  .map(user => (\n                    <div key={user._id}>\n                      <Link to={`/profile/${user._id}`}>\n                        <img className='user-avatar' src={user.avatar} />\n                      </Link>\n                    </div>\n                  ))\n              ) : (\n                <h4>No profiles found ...</h4>\n              )}\n            </div>\n            <hr />\n            <Link to='/post-form'>Join them</Link>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nUserItem.propTypes = {\n  user: PropTypes.object.isRequired,\n  getUsers: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(\n  mapStateToProps,\n  { getUsers }\n)(UserItem);\n","import { GET_USERS, PROFILE_ERROR } from './types';\nimport axios from 'axios';\n\n//get all the users\nexport const getUsers = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/users');\n\n    dispatch({\n      type: GET_USERS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst TopDiscussion = ({ posts }) => {\n  return (\n    <Fragment>\n      <h2>Top Discussions</h2>\n      <div className='top-discussion-section'>\n        {posts\n          .sort((a, b) =>\n            a.comments.length > b.comments.length\n              ? -1\n              : b.comments.length > a.comments.length\n              ? 1\n              : 0\n          )\n          .slice(0, 10)\n          .map(post => (\n            <div className='item'>\n              <p>{post.title}</p>\n\n              <div className='stats'>\n                <div className='comments'>\n                  <i className='fas fa-comments' />\n                  {post.comments.length}\n                </div>\n                <div className='likes'>\n                  <i class='fas fa-caret-up'></i>\n                  {post.likes.length}\n                </div>\n              </div>\n\n              <hr />\n            </div>\n          ))}\n      </div>\n    </Fragment>\n  );\n};\n\nTopDiscussion.propTypes = {\n  post: PropTypes.object.isRequired\n};\n\nexport default TopDiscussion;\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from './PostItem';\nimport UserItem from '../users/UserItem';\nimport TopDiscussion from '../TopDiscussion';\nimport { getPosts } from '../../actions/post';\n\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  return loading ? (\n    <Spinner />\n  ) : (\n    <div className='main-grid'>\n      <div className='posts-grid'>\n        <h1 className='large text-primary'>Ideas</h1>\n        <div className='posts'>\n          {posts\n            .sort((a, b) =>\n              a.likes.length > b.likes.length\n                ? -1\n                : b.likes.length > a.likes.length\n                ? 1\n                : 0\n            )\n            .map(post => (\n              <PostItem key={post._id} post={post} />\n            ))}\n        </div>\n      </div>\n      <div className='right-panel-grid'>\n        <UserItem />\n        <TopDiscussion posts={posts} />\n      </div>\n    </div>\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\nexport default connect(\n  mapStateToProps,\n  { getPosts }\n)(Posts);\n","import React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addComment } from '../../actions/post';\n\nconst CommentForm = ({ auth, postId, addComment }) => {\n  const [text, setText] = useState('');\n\n  const setArea = () => {\n    var tx = document.getElementsByTagName('textarea');\n    for (var i = 0; i < tx.length; i++) {\n      tx[i].setAttribute(\n        'style',\n        'height:' + tx[i].scrollHeight + 'px;overflow-y:hidden;'\n      );\n    }\n  };\n\n  return (\n    <div className='comment-form'>\n      <form\n        className='form'\n        onSubmit={e => {\n          e.preventDefault();\n          //   text is object\n          addComment(postId, { text });\n          setText('');\n        }}\n      >\n        {!auth.loading && auth.isAuthenticated ? (\n          <Fragment>\n            <img className='avatar' src={auth.user.avatar} alt='user-avatar' />\n            <textarea\n              className='comment-area-responsive'\n              name='title'\n              rows='1'\n              placeholder='What do you think?'\n              value={text}\n              onChange={e => {\n                setText(e.target.value);\n                setArea(e.target.value);\n              }}\n              required\n            />\n            <input type='submit' className='btn btn-primary' value='Comment' />\n          </Fragment>\n        ) : (\n          <Fragment>\n            <p>\n              Please <Link to='/login'>log in</Link> to comment\n            </p>\n          </Fragment>\n        )}\n      </form>\n    </div>\n  );\n};\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { addComment }\n)(CommentForm);\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { deleteSubComment, toggleCommentLike } from '../../actions/post';\nimport Spinner from '../layout/Spinner';\n\nconst SubCommentItem = ({\n  postId,\n  subcomment: { _id, text, name, avatar, user, date, likes },\n  auth,\n  commentid,\n  deleteSubComment\n}) => (\n  <div className='subcomment-item'>\n    <div>\n      <Link className='user' to={`/profile/${user}`}>\n        <img className='avatar' src={avatar} alt='' />\n        <h4 className='user-name'>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className='comment-content'>{text}</p>\n\n      <div className='comment-info'>\n        <p className='comment-date'>\n          <Moment format='YYYY/MM/DD'>{date}</Moment>\n        </p>\n\n        {!auth.loading && auth.isAuthenticated && user === auth.user._id && (\n          <button\n            onClick={e => deleteSubComment(postId, commentid, _id)}\n            type='button'\n            className='remove-sub-comment'\n          >\n            Delete\n          </button>\n        )}\n      </div>\n\n      {/* <button onClick={e => toggleCommentLike(postId, _id)}>\n      like\n      {likes.length}\n    </button> */}\n    </div>\n  </div>\n);\n\nSubCommentItem.propTypes = {\n  postId: PropTypes.number.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n  toggleCommentLike: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { deleteSubComment, toggleCommentLike }\n)(SubCommentItem);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { addSubComment, removeSubComment } from '../../actions/post';\nimport { connect } from 'react-redux';\n\nconst SubCommentForm = ({ addSubComment, postId, commentId }) => {\n  const [text, setSubcomment] = useState('');\n  const setArea = () => {\n    var tx = document.getElementsByTagName('textarea');\n    for (var i = 0; i < tx.length; i++) {\n      tx[i].setAttribute(\n        'style',\n        'height:' + tx[i].scrollHeight + 'px;overflow-y:hidden;'\n      );\n    }\n  };\n\n  return (\n    <div>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          addSubComment(postId, commentId, { text });\n          setSubcomment('');\n        }}\n        onKeyDown={e => {\n          if (e.key === 'Enter') {\n            e.preventDefault();\n            addSubComment({ text });\n            setSubcomment('');\n          }\n        }}\n      >\n        <textarea\n          name='text'\n          rows='1'\n          placeholder='leave a comment'\n          value={text}\n          onChange={e => {\n            setSubcomment(e.target.value);\n            setArea(e.target.value);\n          }}\n          required\n        />\n\n        <input type='submit' className='btn btn-primary' value='Add' />\n      </form>\n    </div>\n  );\n};\n\nSubCommentForm.propTypes = {};\n\nexport default connect(\n  null,\n  { addSubComment }\n)(SubCommentForm);\n","import React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { deleteComment, toggleCommentLike } from '../../actions/post';\nimport SubCommentItem from './SubCommentItem';\nimport SubCommentForm from './SubCommentForm';\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date, likes, subComments },\n  auth,\n  deleteComment,\n  toggleCommentLike\n}) => {\n  const [displayForm, toggleDisplayForm] = useState(false);\n  return (\n    <div className='comment-item'>\n      <div>\n        <Link className='user' to={`/profile/${user}`}>\n          <img className='avatar' src={avatar} alt='' />\n          <h4 className='user-name'>{name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p className='comment-content'>{text}</p>\n        <p class='comment-date'>\n          <Moment format='YYYY/MM/DD'>{date}</Moment>\n        </p>\n\n        <div className='comment-panel'>\n          {auth &&\n          auth.user &&\n          likes.filter(arrayItem => arrayItem.user === auth.user._id).length >\n            0 ? (\n            <button\n              className='text-primary'\n              onClick={e => toggleCommentLike(postId, _id)}\n            >\n              Upvote &#40;\n              {likes.length}&#41;\n            </button>\n          ) : (\n            <button onClick={e => toggleCommentLike(postId, _id)}>\n              Upvote &#40;\n              {likes.length}&#41;\n            </button>\n          )}\n          <button\n            className='toggle-form-button'\n            onClick={e => toggleDisplayForm(!displayForm)}\n          >\n            {!displayForm ? <p>Reply</p> : <p>Reply</p>}\n          </button>\n        </div>\n\n        {!auth.loading && auth.isAuthenticated && user === auth.user._id && (\n          <button\n            onClick={e => deleteComment(postId, _id)}\n            type='button'\n            className='remove-comment'\n          >\n            Delete\n            {/* <i className='fas fa-times' /> */}\n          </button>\n        )}\n\n        <div className='subcomment-section'>\n          <div className='subcomment-form'>\n            {displayForm && <SubCommentForm postId={postId} commentId={_id} />}\n          </div>\n\n          <div className='subcomment-items'>\n            {subComments.map(subcomment => (\n              <SubCommentItem\n                commentid={_id}\n                subcomment={subcomment}\n                postId={postId}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCommentItem.propTypes = {\n  postId: PropTypes.number.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n  toggleCommentLike: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { deleteComment, toggleCommentLike }\n)(CommentItem);\n","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport { getPost, getPosts } from '../../actions/post';\nimport { Link, withRouter } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport CommentForm from './CommentForm';\nimport CommentItem from './CommentItem';\nimport SubCommentForm from './SubCommentForm';\nimport { deletePost, toggleLikePostPage } from '../../actions/post';\n\nconst Post = ({\n  getPost,\n  getPosts,\n  post: { post, loading },\n  match,\n  auth,\n  deletePost,\n  toggleLikePostPage,\n  alert,\n  history\n}) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <Link to='/posts' className='btn'>\n        Back to posts\n      </Link>\n\n      <div className='post'>\n        <div className='left'>\n          <Link className='user' to={`/profile/${post.user}`}>\n            <img className='avatar' src={post.avatar} alt='' />\n            <p className='user-name'> {post.name}</p>\n          </Link>\n\n          <div className='post-content'>\n            <h1 className='post-title'>{post.title}</h1>\n            <p className='post-body'>{post.body}</p>\n            <p className='post-date'>\n              Posted on <Moment format='YYYY/MM/DD'>{post.date}</Moment>\n            </p>\n\n            <span className='border-btn'>\n              <i class='fas fa-comments border-btn' />{' '}\n              {post.comments.length > 0 && (\n                <span className='comment-count'>{post.comments.length}</span>\n              )}\n            </span>\n\n            {!auth.loading &&\n              auth.isAuthenticated &&\n              auth.user &&\n              post.user === auth.user._id && (\n                <button\n                  onClick={e => deletePost(post._id, history)}\n                  type='button'\n                >\n                  Delete this post\n                </button>\n              )}\n          </div>\n        </div>\n\n        <div className='right'>\n          {auth &&\n          auth.user &&\n          post.likes.filter(arrayItem => arrayItem.user === auth.user._id)\n            .length > 0 ? (\n            <button\n              onClick={e => toggleLikePostPage(post._id)}\n              type='button'\n              className='btn toggle-like primary-border'\n            >\n              <i class='fas fa-sort-up' />{' '}\n              <div className='comment-count'>\n                {post.likes.length > 0 ? post.likes.length : 0}\n              </div>\n            </button>\n          ) : (\n            <button\n              onClick={e => toggleLikePostPage(post._id)}\n              type='button'\n              className='btn toggle-like'\n            >\n              <i class='fas fa-sort-up border-btn' />{' '}\n              <div className='comment-count'>\n                {post.likes.length > 0 ? post.likes.length : 0}\n              </div>\n            </button>\n          )}\n        </div>\n      </div>\n\n      <h2>Discussion</h2>\n      <div className='discussion-section'>\n        <CommentForm postId={post._id} />\n        <div className='comments'>\n          {post.comments\n            .sort((a, b) =>\n              a.likes.length > b.likes.length\n                ? -1\n                : b.likes.length > a.likes.length\n                ? 1\n                : 0\n            )\n            .map(comment => (\n              <Fragment>\n                <CommentItem\n                  key={comment._id}\n                  comment={comment}\n                  postId={post._id}\n                />\n              </Fragment>\n            ))}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n  posts: PropTypes.object.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  toggleLikePostPage: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post,\n  auth: state.auth,\n  alert: state.alert\n});\n\nexport default connect(\n  mapStateToProps,\n  { getPost, getPosts, deletePost, toggleLikePostPage }\n)(withRouter(Post));\n","import React, { useState } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../actions/post';\n\nconst PostForm = ({ post: { post }, addPost, alert, history }) => {\n  const [formData, setFormData] = useState({\n    title: '',\n    body: ''\n  });\n\n  const setText = () => {\n    // this.setState({ text: val });\n    var tx = document.getElementsByTagName('textarea');\n    for (var i = 0; i < tx.length; i++) {\n      tx[i].setAttribute(\n        'style',\n        'height:' + tx[i].scrollHeight + 'px;overflow-y:hidden;'\n      );\n    }\n  };\n\n  return (\n    <div className='post-form'>\n      <h3>Share you idea</h3>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          addPost(formData, history);\n          setFormData('');\n        }}\n      >\n        <textarea\n          name='title'\n          rows='1'\n          placeholder='What is the idea, problem you have?'\n          value={formData.title}\n          onChange={e => {\n            setFormData({ ...formData, title: e.target.value });\n            setText(e.target.value);\n          }}\n          required\n        ></textarea>\n        <textarea\n          name='body'\n          rows='1'\n          placeholder='Tell us more how you come up with that, what is the background'\n          value={formData.body}\n          onChange={e => {\n            setFormData({ ...formData, body: e.target.value });\n            setText(e.target.value);\n          }}\n          required\n        ></textarea>\n        <input type='submit' className='btn btn-primary m-2' value='Submit' />\n      </form>\n    </div>\n  );\n};\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post,\n  alert: state.alert\n});\n// null because no need state from redux\nexport default connect(\n  mapStateToProps,\n  { addPost }\n)(withRouter(PostForm));\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props =>\n      !isAuthenticated && !loading ? (\n        <Redirect to='/login' />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  ACCOUNT_DELETED\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n    case ACCOUNT_DELETED:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_PROFILE,\n  GET_PROFILES,\n  PROFILE_ERROR,\n  CLEAR_PROFILE\n} from '../actions/types';\n\nconst initialState = {\n  profile: null,\n  profiles: [],\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  UPDATE_LIKE,\n  UPDATE_COMMENT_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n  ADD_SUB_COMMENT,\n  REMOVE_SUB_COMMENT,\n  UPDATE_STATUS\n} from '../actions/types';\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        post: payload,\n        // posts: [payload, ...state.posts],\n        loading: false\n      };\n\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_COMMENT_LIKES:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: payload\n        },\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map(post =>\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false\n      };\n    case UPDATE_LIKE:\n      return {\n        ...state,\n        post: { ...state.post, likes: payload },\n        loading: false\n      };\n\n    case UPDATE_STATUS:\n      return {\n        ...state,\n        posts: state.posts.map(post =>\n          post._id === payload.id ? { ...post, status: payload.status } : post\n        ),\n        loading: false\n      };\n\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        // payload is all the comments\n        post: { ...state.post, comments: payload },\n        loading: false\n      };\n\n    case ADD_SUB_COMMENT:\n      return {\n        ...state,\n        // payload is all the comments of a post\n        post: { ...state.post, comments: payload },\n        loading: false\n      };\n\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            comment => comment._id !== payload\n          ),\n          loading: false\n        }\n      };\n\n    case REMOVE_SUB_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: payload\n          // comments: state.post.comments.map(comment =>\n          //   {\n          //   if (comment._id === payload.commentId) {\n          //     comment.subComments.filter(\n          //       subcomment => subcomment._id === payload.subcommentId\n          //     );\n          //   }\n          // }\n          // )\n        },\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}\n","import { GET_USERS, PROFILE_ERROR } from '../actions/types';\n\nconst initialState = {\n  users: [],\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_USERS:\n      return {\n        ...state,\n        users: payload,\n        loading: false\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport profile from './profile';\nimport post from './post';\nimport user from './user';\n\nexport default combineReducers({\n  alert,\n  auth,\n  profile,\n  post,\n  user\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) =>\n  alerts !== null &&\n  alerts.length > 0 &&\n  alerts.map(alert => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);\n","import React, { Fragment, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport About from './components/layout/About';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Dashboard from './components/dashboard/Dashboard';\nimport CreateProfile from './components/profile-forms/CreateProfile';\nimport EditProfile from './components/profile-forms/EditProfile';\nimport Profiles from './components/profiles/Profiles';\nimport Profile from './components/profile/Profile';\nimport Posts from './components/posts/Posts';\nimport Post from './components/post/Post';\nimport PostForm from './components/posts/PostForm';\nimport PrivateRoute from './components/routing/PrivateRoute';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nimport Alert from './components/layout/Alert';\n\nimport './App.css';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <div className='alert-container'>\n            <Alert />\n          </div>\n          <Route exact path='/landing' component={Landing} />\n          <Route exact path='/about' component={About} />\n          <section className='container'>\n            <Switch>\n              <Route exact path='/register' component={Register} />\n              <Route exact path='/login' component={Login} />\n\n              <Route exact path='/profiles' component={Profiles} />\n              <Route exact path='/profile/:id' component={Profile} />\n              <Route exact path='/' component={Posts} />\n              <Route exact path='/posts/:id' component={Post} />\n              <Route exact path='/post-form' component={PostForm} />\n              <PrivateRoute exact path='/dashboard' component={Dashboard} />\n              <PrivateRoute\n                exact\n                path='/create-profile'\n                component={CreateProfile}\n              />\n              <PrivateRoute\n                exact\n                path='/edit-profile'\n                component={EditProfile}\n              />\n            </Switch>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}