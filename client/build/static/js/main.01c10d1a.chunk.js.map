{"version":3,"sources":["components/layout/spinner.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/dashboard/DashboardActions.js","actions/profile.js","components/dashboard/Dashboard.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/layout/Spinner.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/Profile.js","actions/post.js","components/posts/PostItem.js","components/posts/PostForm.js","components/users/UserItem.js","actions/user.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/routing/PrivateRoute.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/user.js","reducers/index.js","store.js","components/layout/Alert.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","setAlert","msg","alertType","timeout","arguments","length","undefined","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","localStorage","get","sent","data","t0","stop","_x","apply","this","connect","state","auth","logout","_ref$auth","isAuthenticated","loading","authLinks","react_default","createElement","react_router_dom","to","className","onClick","href","guestLinks","react","react_router","register","_ref2","name","email","password","_ref3","_callee2","config","body","errors","_context2","Content-Type","JSON","stringify","post","response","forEach","error","_x2","_useState","useState","password2","_useState2","slicedToArray","formData","setFormData","onChange","e","objectSpread","defineProperty","target","value","onSubmit","preventDefault","placeholder","requried","minLength","class","login","_ref4","_callee3","_context3","_x3","DashboardActions","getCurrentProfile","statusText","status","createProfile","history","edit","_callee4","_context4","push","_x4","profile","deleteAccount","_ref5","_callee5","_context5","window","confirm","err","_x5","user","_ref$profile","useEffect","dashboard_DashboardActions","withRouter","website","location","skills","bio","youtube","twitter","facebook","instagram","linkedin","_useState3","_useState4","displaySocialInputs","toggleSocialInputs","Spinner","src","spinner","style","width","margin","display","alt","ProfileItem","_ref$profile$user","_id","avatar","concat","getProfiles","profiles","map","profiles_ProfileItem","key","ProfileTop","social","rel","ProfileAbout","firstName","trim","split","skill","index","getProfileById","userId","console","log","match","params","profile_ProfileTop","profile_ProfileAbout","getPosts","toggleLike","put","likes","deletePost","_ref6","_callee6","_context6","delete","_x6","toggleStatus","_ref10","_callee10","_context10","_x10","xxx","_ref$post","title","comments","date","dist_default","format","filter","arrayItem","alert","addPost","_ref7","_callee7","_context7","_x7","rows","required","getUsers","_ref$user","users","posts","posts_PostItem","users_UserItem","addComment","postId","_ref8","_callee8","_context8","_x8","text","setText","deleteComment","commentId","_ref9","_callee9","_context9","_x9","_ref$comment","comment","getPost","message","post_CommentForm","post_CommentItem","Component","component","rest","objectWithoutProperties","assign","render","props","initialState","getItem","combineReducers","action","toConsumableArray","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","alerts","App","es","layout_Navbar","layout_Alert","exact","path","Landing","Register","Login","Profiles","Profile","Posts","Post","PostForm","routing_PrivateRoute","Dashboard","CreateProfile","EditProfile","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.01c10d1a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.377ea55d.gif\";","import { SET_ALERT, REMOVE_ALERT } from './types';\nimport uuid from 'uuid';\n\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n  const id = uuid.v4();\n  dispatch({\n    type: SET_ALERT,\n    payload: { msg, alertType, id }\n  });\n\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n};\n","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\nexport const LOGOUT = 'LOGOUT';\n\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\n\n// clear profile when logout so the next user(same computer) can not access\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\n\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\n\nexport const GET_POSTS = 'GET_POSTS';\nexport const GET_POST = 'GET_POST';\nexport const POST_ERROR = 'POST_ERROR';\n\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\nexport const DELETE_POST = 'DELETE_POST';\n\nexport const UPDATE_STATUS = 'UPDATE_STATUS';\n\nexport const ADD_POST = 'ADD_POST';\n\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\n\nexport const GET_USERS = 'GET_USERS';\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\n// Load User\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n// Register User\n\nexport const register = ({ name, email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n\n// Login User\n\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n//LOGOUT / clear everything\n\nexport const logout = () => dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n};\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n  const authLinks = (\n    <ul>\n      {/* <li>\n        <Link to='/profiles'>Ideators</Link>\n      </li> */}\n\n      {/* <li>\n        <Link to='/posts'>Posts</Link>\n      </li> */}\n\n      <li>\n        <Link to='/post-form'>+</Link>\n      </li>\n\n      <li>\n        <Link to='/dashboard'>\n          <i className='fas fa-user' />{' '}\n          <span className='hide-sm'>Your Profile</span>\n        </Link>\n      </li>\n\n      <li>\n        <a onClick={logout} href='/'>\n          <i className='fas fa-sign-out-alt' />\n          {'  '}\n          <span className='hide-sm'>Log out</span>\n        </a>\n      </li>\n    </ul>\n  );\n\n  const guestLinks = (\n    <ul>\n      {/* <li>\n        <Link to='/profiles'>Ideators</Link>\n      </li> */}\n      {/* <li>\n        <Link to='/posts'>Posts</Link>\n      </li> */}\n\n      <li>\n        <Link to='/login'>+</Link>\n      </li>\n\n      <Link to='/register'>\n        <li>Sign up</li>\n      </Link>\n      <Link to='/login'>\n        <li>Log in</li>\n      </Link>\n    </ul>\n  );\n  return (\n    <nav className='navbar bg-primary'>\n      <h1>\n        <Link to='/'>IDEATOSHARE</Link>\n      </h1>\n      {!loading && (\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\n      )}\n    </nav>\n  );\n};\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Navbar);\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst Landing = ({ isAuthenticated }) => {\n  if (isAuthenticated) {\n    return <Redirect to='/' />;\n  }\n  return (\n    <div className='landing'>\n      <div className='dark-overlay'>\n        <div className='landing-inner'>\n          <h1 className='x-large'>Welcome to IDEAshare</h1>\n          <p className='lead'>Share your ideas and problem with the world</p>\n          <div className='buttons'>\n            <Link to='/register' className='btn btn-action'>\n              Sign up\n            </Link>\n            <Link to='/login' className='btn'>\n              Log in\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nLanding.propTypes = {\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\nexport default connect(mapStateToProps)(Landing);\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({ name, email, password });\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/' />;\n  }\n  return (\n    <Fragment>\n      <div className='register-form'>\n        <h1 className='large bold'>Create your account</h1>\n\n        <form className='form' onSubmit={e => onSubmit(e)}>\n          <div className='form-group'>\n            <p>Name</p>\n            <input\n              name='name'\n              type='text'\n              placeholder='Name'\n              requried\n              value={name}\n              onChange={e => onChange(e)}\n            />\n          </div>\n\n          <div className='form-group'>\n            <p>E-mail</p>\n            <input\n              name='email'\n              type='email'\n              placeholder='E-mail'\n              value={email}\n              onChange={e => onChange(e)}\n            />\n          </div>\n\n          <div className='form-group'>\n            <p>Password</p>\n            <input\n              name='password'\n              type='password'\n              placeholder='Password'\n              minLength='6'\n              value={password}\n              onChange={e => onChange(e)}\n            />\n          </div>\n\n          <div className='form-group'>\n            <p class='confirm'>Confirm password</p>\n            <input\n              name='password2'\n              type='password'\n              placeholder='Confirm Password'\n              minLength='6'\n              value={password2}\n              onChange={e => onChange(e)}\n            />\n          </div>\n          <input\n            type='submit'\n            value='Create account'\n            className='btn btn-action'\n          />\n        </form>\n\n        <p>\n          Already have an account? <Link to='/login'>Sign in</Link>\n        </p>\n\n        <p className='small'>\n          By signing up, you agree to the <Link>Terms of Service</Link> and{' '}\n          <Link>Privacy Policy</Link>\n        </p>\n      </div>\n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(\n  mapStateToProps,\n  { setAlert, register }\n)(Register);\n","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  // Redirect if logged in\n\n  if (isAuthenticated) {\n    return <Redirect to='/' />;\n  }\n  return (\n    <Fragment>\n      <div className='register-form'>\n        {/* <div className='close'>+</div> */}\n        <h1 className='large bold'>Sign in to your account</h1>\n        <form className='form' onSubmit={e => onSubmit(e)}>\n          <div className='form-group'>\n            <p>E-mail</p>\n            <input\n              name='email'\n              type='email'\n              placeholder='E-mail'\n              value={email}\n              onChange={e => onChange(e)}\n            />\n          </div>\n\n          <div className='form-group'>\n            <p>Password</p>\n            <input\n              name='password'\n              type='password'\n              placeholder='Password'\n              minLength='6'\n              value={password}\n              onChange={e => onChange(e)}\n            />\n          </div>\n          <input type='submit' value='Sign in' className='btn btn-action' />\n        </form>\n\n        <p>\n          Don't have an account? <Link to='/register'>Sign up</Link>\n        </p>\n      </div>\n    </Fragment>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst DashboardActions = () => {\n  return (\n    <div className='dash-buttons'>\n      <Link to='/edit-profile' className='btn btn-light'>\n        <i className='fas fa-user-circle text-primary' /> Edit Profile\n      </Link>\n    </div>\n  );\n};\n\nexport default DashboardActions;\n","import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  GET_PROFILES,\n  CLEAR_PROFILE,\n  ACCOUNT_DELETED\n} from './types';\n\n// Get current users profile\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Get all profiles\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Get profile by ID\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log('inside catch');\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Create or update profile\nexport const createProfile = (\n  formData,\n  history,\n  edit = false\n) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    const res = await axios.post('/api/profile', formData, config);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete account $ profile, know the account from the token\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This cannot be undone.')) {\n    try {\n      dispatch({ type: CLEAR_PROFILE });\n      dispatch({ type: ACCOUNT_DELETED });\n\n      dispatch(\n        setAlert('Your account has been permanently deleted', 'success')\n      );\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  }\n};\n","import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// import Spinner from '../layout/Spinner';\nimport DashboardActions from './DashboardActions';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: { user },\n  profile: { profile, loading }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n  return loading && profile === null ? (\n    // <Spinner />\n\n    <h1>hii</h1>\n  ) : (\n    <Fragment>\n      <h1 className='large text-primary'>Dashboard</h1>\n      <p>\n        <i className='fas fa-user'>\n          Hello {user && user.name}, Welcome to IdeaShare\n        </i>\n      </p>\n\n      {profile !== null ? (\n        <Fragment>\n          <DashboardActions />\n\n          <div className='my-2'>\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\n              <i className='fas fa-user-minus' /> Delete My Account\n            </button>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <p>You have not created profile yet, let's add some info.</p>\n          <Link to='create-profile' className='btn btn-primary'>\n            Create Profile\n          </Link>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(\n  mapStateToProps,\n  { getCurrentProfile, deleteAccount }\n)(Dashboard);\n","import React, { Fragment, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile } from '../../actions/profile';\n\nconst CreateProfile = ({ createProfile, history }) => {\n  const [formData, setFormData] = useState({\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    bio: '',\n    youtube: '',\n    twitter: '',\n    facebook: '',\n    instagram: '',\n    linkedin: ''\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  const {\n    website,\n    location,\n    status,\n    skills,\n    bio,\n    youtube,\n    twitter,\n    facebook,\n    instagram,\n    linkedin\n  } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history);\n  };\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user' /> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={e => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={e => onChange(e)}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x' />\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x' />\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x' />\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x' />\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x' />\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={e => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { createProfile }\n)(withRouter(CreateProfile));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  getCurrentProfile,\n  createProfile,\n  history\n}) => {\n  const [formData, setFormData] = useState({\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    bio: '',\n    youtube: '',\n    twitter: '',\n    facebook: '',\n    instagram: '',\n    linkedin: ''\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      status: loading || !profile.status ? '' : profile.status,\n      skills: loading || !profile.skills ? '' : profile.skills,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      youtube: loading || !profile.youtube ? '' : profile.youtube,\n      twitter: loading || !profile.twitter ? '' : profile.twitter,\n      facebook: loading || !profile.facebook ? '' : profile.facebook,\n      instagram: loading || !profile.instagram ? '' : profile.instagram,\n      linkedin: loading || !profile.linkedin ? '' : profile.linkedin\n    });\n  }, [loading, getCurrentProfile]);\n\n  const {\n    website,\n    location,\n    status,\n    skills,\n    bio,\n    youtube,\n    twitter,\n    facebook,\n    instagram,\n    linkedin\n  } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user' /> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={e => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={e => onChange(e)}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x' />\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x' />\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x' />\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x' />\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x' />\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={e => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\nexport default connect(\n  mapStateToProps,\n  { createProfile, getCurrentProfile }\n)(withRouter(EditProfile));\n","import React from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n  <div className='container-xy'>\n    <div className='center-xy'>\n      <img\n        src={spinner}\n        style={{ width: '200px', margin: 'auto', display: 'block' }}\n        alt='Landing...'\n      />\n      <h1>loading...</h1>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst ProfileItem = ({\n  profile: {\n    user: { _id, name, avatar },\n    status,\n    location,\n    skills\n  }\n}) => {\n  return (\n    <div>\n      <img src={avatar} alt={`${name}-avatar`} className='profile-avatar' />\n    </div>\n\n    // original\n    // <div className='profile'>\n    //   <img src={avatar} alt='' className='round-img' />\n    //   <div>\n    //     <h2>{name}</h2>\n    //     <p>{status}</p>\n    //     <p className='my-1'>{location && <span>{location}</span>}</p>\n    //     <Link to={`/profile/${_id}`} className='btn btn-primary'>\n    //       View Profile\n    //     </Link>\n    //   </div>\n    //   <ul>\n    //     {skills.slice(0, 4).map((skill, index) => (\n    //       <li key={index} className='text-primary'>\n    //         <i className='fas fa-check' />\n    //         {skill}\n    //       </li>\n    //     ))}\n    //   </ul>\n    // </div>\n  );\n};\n\nProfileItem.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileItem;\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from './ProfileItem';\nimport { getProfiles } from '../../actions/profile';\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n  return (\n    <Fragment>\n      {loading || profiles === null ? (\n        <Spinner />\n      ) : (\n        <div className='profiles-grid'>\n          {/* <h1 className='large text-primary'>Ideators</h1> */}\n          <p className='lead'>\n            <i className='fab fa-connectdevelop' /> Our Ideators\n          </p>\n          <div className='profiles'>\n            <div className='flex'>\n              {profiles.length > 0 ? (\n                profiles.map(profile => (\n                  <ProfileItem key={profile._id} profile={profile} />\n                ))\n              ) : (\n                <h4>No profiles found ...</h4>\n              )}\n            </div>\n\n            <hr />\n            <p>show more</p>\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\nexport default connect(\n  mapStateToProps,\n  { getProfiles }\n)(Profiles);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileTop = ({\n  profile: {\n    status,\n    location,\n    website,\n    social,\n    user: { name, avatar }\n  }\n}) => {\n  return (\n    <div className='profile-top bg-primary p-2'>\n      <img className='round-img my-1' src={avatar} alt='' />\n      <h1 className='large'>{name}</h1>\n      <p className='lead'>{status}</p>\n      <p>{location && <span>{location}</span>}</p>\n      <div class='icons my-1'>\n        {website && (\n          <a href={website} target='_blank' rel='noopener noreferrer'>\n            <i className='fas fa-globe fa-2x' />\n          </a>\n        )}\n\n        {social && social.twitter && (\n          <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-twitter fa-2x' />\n          </a>\n        )}\n\n        {social && social.facebook && (\n          <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-facebook fa-2x' />\n          </a>\n        )}\n\n        {social && social.linkedin && (\n          <a href={social.linkedin} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-linkedin fa-2x' />\n          </a>\n        )}\n\n        {social && social.youtube && (\n          <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-youtube fa-2x' />\n          </a>\n        )}\n\n        {social && social.instagram && (\n          <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-instagram fa-2x' />\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nProfileTop.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileTop;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileAbout = ({\n  profile: {\n    bio,\n    skills,\n    user: { name }\n  }\n}) => {\n  const firstName = name.trim().split(' ')[0];\n\n  return (\n    <div class='profile-about bg-light p-2'>\n      {bio && (\n        <Fragment>\n          <h2 class='text-primary'>\n            {firstName[firstName.length - 1] === 's'\n              ? `${firstName}'`\n              : `${firstName}'s`}{' '}\n            Bio\n          </h2>\n          <p>{bio}</p>\n        </Fragment>\n      )}\n\n      <div>\n        <h2 class='text-primary'>Skills Set</h2>\n        <div className='skills'>\n          {skills.map((skill, index) => (\n            <div key={index} class='p-1'>\n              <i class='fa fa-check' /> {skill}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nProfileAbout.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileAbout;\n","import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\n\nconst Profile = ({\n  getProfileById,\n  profile: { profile, loading },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n\n  return (\n    <Fragment>\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <Link to='/profiles' className='btn btn-light'>\n            Back To Profiles\n          </Link>\n\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id && (\n              <Link to='/edit-profile' className='btn btn-dark'>\n                Edit Profile\n              </Link>\n            )}\n\n          <div className='profile-grid my-1'>\n            <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} />\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { getProfileById }\n)(Profile);\n","import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n  GET_POSTS,\n  POST_ERROR,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  UPDATE_LIKES,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n  UPDATE_STATUS\n} from './types';\n\n//Get posts\nexport const getPosts = () => async dispatch => {\n  try {\n    console.log('1');\n    const res = await axios.get('/api/posts');\n    console.log('2');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n    console.log('3');\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Get a single post\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.message, status: err.name }\n    });\n  }\n};\n\n// toggleLike\nexport const toggleLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/togglelike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data }\n    });\n  } catch (err) {\n    dispatch(setAlert('Please login to vote', 'danger'));\n\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Add like\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Remove like\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete post\nexport const deletePost = id => async dispatch => {\n  try {\n    const approved = window.confirm(\n      'Are you sure you want to delet this post?'\n    );\n    if (approved) {\n      await axios.delete(`/api/posts/${id}`);\n\n      dispatch({\n        type: DELETE_POST,\n        payload: id\n      });\n\n      dispatch(setAlert('Post Removed', 'success'));\n    }\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    const res = await axios.post('/api/posts', formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// add comment\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    const res = await axios.post(\n      `/api/posts/comment/${postId}`,\n      formData,\n      config\n    );\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Post Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete Comment\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId\n    });\n\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// update status of the post\nexport const toggleStatus = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/status/${id}`);\n\n    dispatch({\n      type: UPDATE_STATUS,\n      payload: { id, status: res.data }\n    });\n  } catch (err) {\n    dispatch(setAlert('You are not authorized', 'danger'));\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { toggleLike, deletePost, toggleStatus } from '../../actions/post';\nconst PostItem = ({\n  toggleLike,\n  deletePost,\n  toggleStatus,\n  auth,\n  post: { _id, title, name, avatar, user, likes, comments, date, status }\n}) => {\n  let xxx;\n  if (status === 'red') {\n    xxx = <i className='fas fa-times red' />;\n  } else if (status === 'yellow') {\n    xxx = <i className='fas fa-spinner yellow' />;\n  } else {\n    xxx = <i className='fas fa-check green' />;\n  }\n  return (\n    <div className='post-item'>\n      <div className='left'>\n        <Link to={`/profile/${user}`}>\n          <img className='post-avatar' src={avatar} alt={`avatar${name}`} />\n          <p>{name}</p>\n        </Link>\n        <button className='status' onClick={e => toggleStatus(_id)}>\n          {xxx}\n        </button>\n      </div>\n      <div className='middle'>\n        <p className='my-1 lead'>{title}</p>\n        <p className='post-date small'>\n          Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n        </p>\n\n        <span className='border-btn'>\n          <Link to={`posts/${_id}`}>\n            <i className='fas fa-comments' />{' '}\n            <span className='comment-count'>\n              {comments.length > 0 ? comments.length : 0}\n            </span>\n          </Link>\n        </span>\n        {/* {!auth.loading &&\n          auth.isAuthenticated &&\n          auth.user &&\n          user === auth.user._id && (\n            <button\n              onClick={e => deletePost(_id)}\n              type='button'\n              className='btn btn-danger'\n            >\n              <i className='fas fa-times' />\n            </button>\n          )} */}\n      </div>\n\n      <div className='right'>\n        {auth &&\n        auth.user &&\n        likes.filter(arrayItem => arrayItem.user === auth.user._id).length >\n          0 ? (\n          <button\n            onClick={e => toggleLike(_id)}\n            type='button'\n            className='btn toggle-like primary-border'\n          >\n            <i class='fas fa-sort-up' />{' '}\n            <div className='comment-count'>\n              {likes.length > 0 ? likes.length : 0}\n            </div>\n          </button>\n        ) : (\n          <button\n            onClick={e => toggleLike(_id)}\n            type='button'\n            className='btn toggle-like'\n          >\n            <i class='fas fa-sort-up' />{' '}\n            <div className='comment-count'>\n              {likes.length > 0 ? likes.length : 0}\n            </div>\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  toggleLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  toggleStatus: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { toggleLike, deletePost, toggleStatus }\n)(PostItem);\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../actions/post';\n\nconst PostForm = ({ post: { post }, addPost, alert }) => {\n  const [formData, setFormData] = useState({\n    title: '',\n    body: ''\n  });\n  return (\n    <div className='post-form'>\n      <h3>Share you idea</h3>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          addPost(formData);\n          setFormData('');\n        }}\n      >\n        <textarea\n          name='title'\n          rows='3'\n          placeholder='What is the idea, problem you have?'\n          value={formData.title}\n          onChange={e => setFormData({ ...formData, title: e.target.value })}\n          required\n        />\n        <textarea\n          name='body'\n          rows='5'\n          placeholder='Tell us more how you come up with that, what is the background'\n          value={formData.body}\n          onChange={e => setFormData({ ...formData, body: e.target.value })}\n          required\n        />\n        <input type='submit' className='btn btn-primary m-2' value='Submit' />\n      </form>\n\n      {alert.length > 0 &&\n        alert[0].msg === 'Post Created' &&\n        alert[0].alertType === 'success' && (\n          <Redirect to={`/posts/${alert[0].id}`} />\n        )}\n    </div>\n  );\n};\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post,\n  alert: state.alert\n});\n// null because no need state from redux\nexport default connect(\n  mapStateToProps,\n  { addPost }\n)(PostForm);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getUsers } from '../../actions/user';\n\nconst UserItem = ({ user: { users, loading }, getUsers }) => {\n  useEffect(() => {\n    getUsers();\n  }, [getUsers]);\n  return (\n    <Fragment>\n      {loading || users === null ? (\n        <Spinner />\n      ) : (\n        <div className='users-grid'>\n          <p className='lead'>\n            <i className='fab fa-connectdevelop' /> Our Ideators\n          </p>\n          <div className='users'>\n            <div className='flex'>\n              {users.length > 0 ? (\n                users.map(user => (\n                  <div key={user._id}>\n                    <img className='user-avatar' src={user.avatar} />\n                  </div>\n                ))\n              ) : (\n                <h4>No profiles found ...</h4>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nUserItem.propTypes = {\n  user: PropTypes.object.isRequired,\n  getUsers: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(\n  mapStateToProps,\n  { getUsers }\n)(UserItem);\n","import { GET_USERS, PROFILE_ERROR } from './types';\nimport axios from 'axios';\n\n//get all the users\nexport const getUsers = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/users');\n\n    dispatch({\n      type: GET_USERS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from './PostItem';\nimport PostForm from './PostForm';\nimport UserItem from '../users/UserItem';\nimport { getPosts } from '../../actions/post';\n\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  return loading ? (\n    <Spinner />\n  ) : (\n    <div className='main-grid'>\n      <div className='posts-grid'>\n        <h1 className='large text-primary'>Ideas</h1>\n        <div className='posts'>\n          {posts.map(post => (\n            <PostItem key={post._id} post={post} />\n          ))}\n        </div>\n      </div>\n\n      <UserItem />\n    </div>\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\nexport default connect(\n  mapStateToProps,\n  { getPosts }\n)(Posts);\n","import React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addComment } from '../../actions/post';\n\nconst CommentForm = ({ auth, postId, addComment }) => {\n  const [text, setText] = useState('');\n\n  return (\n    <div className='comment-form'>\n      <form\n        className='form'\n        onSubmit={e => {\n          e.preventDefault();\n          //   text is object\n          addComment(postId, { text });\n          setText('');\n        }}\n      >\n        {!auth.loading && auth.isAuthenticated ? (\n          <Fragment>\n            <img className='avatar' src={auth.user.avatar} alt='user-avatar' />\n            <textarea\n              name='title'\n              rows='1'\n              placeholder='What do you think?'\n              value={text}\n              onChange={e => setText(e.target.value)}\n              required\n            />\n            <input type='submit' className='btn btn-dark my-1' value='Submit' />\n          </Fragment>\n        ) : (\n          <Fragment>\n            <p>\n              Please <Link to='/login'>log in</Link> to comment\n            </p>\n          </Fragment>\n        )}\n      </form>\n    </div>\n  );\n};\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { addComment }\n)(CommentForm);\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { deleteComment } from '../../actions/post';\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment\n}) => (\n  <div className='comment-item'>\n    <div>\n      <Link className='user' to={`/profile/${user}`}>\n        <img className='avatar' src={avatar} alt='' />\n        <h4 className='user-name'>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className='comment-content'>{text}</p>\n      <p class='comment-date'>\n        <Moment format='YYYY/MM/DD'>{date}</Moment>\n      </p>\n\n      {!auth.loading && auth.isAuthenticated && user === auth.user._id && (\n        <button\n          onClick={e => deleteComment(postId, _id)}\n          type='button'\n          className='remove-comment'\n        >\n          Delete\n          {/* <i className='fas fa-times' /> */}\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nCommentItem.propTypes = {\n  postId: PropTypes.number.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { deleteComment }\n)(CommentItem);\n","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport { getPost, getPosts } from '../../actions/post';\nimport { Link, Redirect } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport CommentForm from './CommentForm';\nimport CommentItem from './CommentItem';\nimport { deletePost, toggleLike } from '../../actions/post';\n\nconst Post = ({\n  getPost,\n  getPosts,\n  post: { post, loading },\n  match,\n  auth,\n  deletePost,\n  toggleLike,\n  alert\n}) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <Link to='/posts' className='btn'>\n        Back to posts\n      </Link>\n\n      <div className='post'>\n        <div className='left'>\n          <Link className='user' to={`/profile/${post.user}`}>\n            <img className='avatar' src={post.avatar} alt='' />\n            <p className='user-name'> {post.name}</p>\n          </Link>\n\n          <div className='post-content'>\n            <h1 className='post-title'>{post.title}</h1>\n            <p className='post-body'>{post.body}</p>\n            <p className='post-date'>\n              Posted on <Moment format='YYYY/MM/DD'>{post.date}</Moment>\n            </p>\n\n            <span className='border-btn'>\n              <i class='fas fa-comments border-btn' />{' '}\n              {post.comments.length > 0 && (\n                <span className='comment-count'>{post.comments.length}</span>\n              )}\n            </span>\n\n            {!auth.loading &&\n              auth.isAuthenticated &&\n              auth.user &&\n              post.user === auth.user._id && (\n                <button onClick={e => deletePost(post._id)} type='button'>\n                  Delete this post\n                </button>\n              )}\n          </div>\n        </div>\n\n        <div className='right'>\n          {auth &&\n          auth.user &&\n          post.likes.filter(arrayItem => arrayItem.user === auth.user._id)\n            .length > 0 ? (\n            <button\n              onClick={e => toggleLike(post._id)}\n              type='button'\n              className='btn toggle-like primary-border'\n            >\n              <i class='fas fa-sort-up' />{' '}\n              <div className='comment-count'>\n                {post.likes.length > 0 ? post.likes.length : 0}\n              </div>\n            </button>\n          ) : (\n            <button\n              onClick={e => toggleLike(post._id)}\n              type='button'\n              className='btn toggle-like'\n            >\n              <i class='fas fa-sort-up border-btn' />{' '}\n              <div className='comment-count'>\n                {post.likes.length > 0 ? post.likes.length : 0}\n              </div>\n            </button>\n          )}\n        </div>\n      </div>\n\n      <h2>Discussion</h2>\n      <div className='discussion-section'>\n        <CommentForm postId={post._id} />\n        <div className='comments'>\n          {post.comments.map(comment => (\n            <CommentItem\n              key={comment._id}\n              comment={comment}\n              postId={post._id}\n            />\n          ))}\n        </div>\n      </div>\n\n      {alert.length > 0 &&\n        alert[0].msg === 'Post Removed' &&\n        alert[0].alertType === 'success' && <Redirect to='/posts' />}\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n  posts: PropTypes.object.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  toggleLike: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post,\n  auth: state.auth,\n  alert: state.alert\n});\n\nexport default connect(\n  mapStateToProps,\n  { getPost, getPosts, deletePost, toggleLike }\n)(Post);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props =>\n      !isAuthenticated && !loading ? (\n        <Redirect to='/login' />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  ACCOUNT_DELETED\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n    case ACCOUNT_DELETED:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_PROFILE,\n  GET_PROFILES,\n  PROFILE_ERROR,\n  CLEAR_PROFILE\n} from '../actions/types';\n\nconst initialState = {\n  profile: null,\n  profiles: [],\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n  UPDATE_STATUS\n} from '../actions/types';\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        post: payload,\n        // posts: [payload, ...state.posts],\n        loading: false\n      };\n\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map(post =>\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false\n      };\n\n    case UPDATE_STATUS:\n      return {\n        ...state,\n        posts: state.posts.map(post =>\n          post._id === payload.id ? { ...post, status: payload.status } : post\n        ),\n        loading: false\n      };\n\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        // payload is all the comments\n        post: { ...state.post, comments: payload },\n        loading: false\n      };\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            comment => comment._id !== payload\n          ),\n          loading: false\n        }\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_USERS, PROFILE_ERROR } from '../actions/types';\n\nconst initialState = {\n  users: [],\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_USERS:\n      return {\n        ...state,\n        users: payload,\n        loading: false\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport profile from './profile';\nimport post from './post';\nimport user from './user';\n\nexport default combineReducers({\n  alert,\n  auth,\n  profile,\n  post,\n  user\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) =>\n  alerts !== null &&\n  alerts.length > 0 &&\n  alerts.map(alert => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);\n","import React, { Fragment, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Dashboard from './components/dashboard/Dashboard';\nimport CreateProfile from './components/profile-forms/CreateProfile';\nimport EditProfile from './components/profile-forms/EditProfile';\nimport Profiles from './components/profiles/Profiles';\nimport Profile from './components/profile/Profile';\nimport Posts from './components/posts/Posts';\nimport Post from './components/post/Post';\nimport PostForm from './components/posts/PostForm';\nimport PrivateRoute from './components/routing/PrivateRoute';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nimport Alert from './components/layout/Alert';\n\nimport './App.css';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <div className='alert-container'>\n            <Alert />\n          </div>\n          <Route exact path='/landing' component={Landing} />\n          <section className='container'>\n            <Switch>\n              <Route exact path='/register' component={Register} />\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/profiles' component={Profiles} />\n              <Route exact path='/profile/:id' component={Profile} />\n              <Route exact path='/' component={Posts} />\n              <Route exact path='/posts/:id' component={Post} />\n              <Route exact path='/post-form' component={PostForm} />\n              <PrivateRoute exact path='/dashboard' component={Dashboard} />\n              <PrivateRoute\n                exact\n                path='/create-profile'\n                component={CreateProfile}\n              />\n              <PrivateRoute\n                exact\n                path='/edit-profile'\n                component={EditProfile}\n              />\n            </Switch>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}